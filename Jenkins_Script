pipeline {
    agent any

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git checkout') {
            steps {
                git branch: 'latest', credentialsId: 'git-cred', url: 'https://github.com/Sidharthroy973/10-MicroService-Appliction.git'
            }
        }

        stage('SonarQube') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectKey=10-Tier \
                        -Dsonar.projectName=10-Tier \
                        -Dsonar.java.binaries=.'''
                }
            }
        }

        stage('Build and Push Docker Images') {
            parallel {
                stage('adservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/adservice') {
                                    sh "docker build -t sidharthroy973/adservice:latest ."
                                    sh "docker push sidharthroy973/adservice:latest"
                                    sh "docker rmi sidharthroy973/adservice:latest"
                                }
                            }
                        }
                    }
                }
                
                stage('cartservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/cartservice/src') {
                                    sh "docker build -t sidharthroy973/cartservice:latest ."
                                    sh "docker push sidharthroy973/cartservice:latest"
                                    sh "docker rmi sidharthroy973/cartservice:latest"
                                }
                            }
                        }
                    }
                }

                stage('checkoutservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/checkoutservice') {
                                    sh "docker build -t sidharthroy973/checkoutservice:latest ."
                                    sh "docker push sidharthroy973/checkoutservice:latest"
                                    sh "docker rmi sidharthroy973/checkoutservice:latest"
                                }
                            }
                        }
                    }
                }

                stage('currencyservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/currencyservice') {
                                    sh "docker build -t sidharthroy973/currencyservice:latest ."
                                    sh "docker push sidharthroy973/currencyservice:latest"
                                    sh "docker rmi sidharthroy973/currencyservice:latest"
                                }
                            }
                        }
                    }
                }

                stage('emailservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/emailservice') {
                                    sh "docker build -t sidharthroy973/emailservice:latest ."
                                    sh "docker push sidharthroy973/emailservice:latest"
                                    sh "docker rmi sidharthroy973/emailservice:latest"
                                }
                            }
                        }
                    }
                }

                stage('paymentservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/paymentservice') {
                                    sh "docker build -t sidharthroy973/paymentservice:latest ."
                                    sh "docker push sidharthroy973/paymentservice:latest"
                                    sh "docker rmi sidharthroy973/paymentservice:latest"
                                }
                            }
                        }
                    }
                }

                stage('productcatalogservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/productcatalogservice') {
                                    sh "docker build -t sidharthroy973/productcatalogservice:latest ."
                                    sh "docker push sidharthroy973/productcatalogservice:latest"
                                    sh "docker rmi sidharthroy973/productcatalogservice:latest"
                                }
                            }
                        }
                    }
                }

                stage('recommendationservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/recommendationservice') {
                                    sh "docker build -t sidharthroy973/recommendationservice:latest ."
                                    sh "docker push sidharthroy973/recommendationservice:latest"
                                    sh "docker rmi sidharthroy973/recommendationservice:latest"
                                }
                            }
                        }
                    }
                }

                stage('shippingservice') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/shippingservice') {
                                    sh "docker build -t sidharthroy973/shippingservice:latest ."
                                    sh "docker push sidharthroy973/shippingservice:latest"
                                    sh "docker rmi sidharthroy973/shippingservice:latest"
                                }
                            }
                        }
                    }
                }

                stage('frontend') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/frontend') {
                                    sh "docker build -t sidharthroy973/frontend:latest ."
                                    sh "docker push sidharthroy973/frontend:latest"
                                    sh "docker rmi sidharthroy973/frontend:latest"
                                }
                            }
                        }
                    }
                }

                stage('loadgenerator') {
                    steps {
                        script {
                            withDockerRegistry(credentialsId: 'Docker-passwd', toolName: 'docker') { 
                                dir('src/loadgenerator') {
                                    sh "docker build -t sidharthroy973/loadgenerator:latest ."
                                    sh "docker push sidharthroy973/loadgenerator:latest"
                                    sh "docker rmi sidharthroy973/loadgenerator:latest"
                                }
                            }
                        }
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig(
                    caCertificate: '', 
                    clusterName: 'ashokit-cluster4', 
                    contextName: '', 
                    credentialsId: 'k8s-token', 
                    namespace: 'webapps', 
                    restrictKubeConfigAccess: false, 
                    serverUrl: 'https://B99C3D6C476C75415121C1198776637C.gr7.ap-south-1.eks.amazonaws.com'
                ) {
                    sh 'kubectl apply -f deployment-service.yml'
                    sh 'kubectl get pods'
                    sh 'kubectl get svc'
                }
            }
        }
    }
}
